// Code generated by protoc-gen-go.
// source: cfsmanage.proto
// DO NOT EDIT!

/*
Package cfsmanage is a generated protocol buffer package.

It is generated from these files:
	cfsmanage.proto

It has these top-level messages:
	Account
	FileSystem
	IPAddress
	CreateAcctRequest
	CreateAcctResponse
	ShowAcctRequest
	ShowAcctResponse
	DeleteAcctRequest
	DeleteAcctResponse
	UpdateAcctRequest
	UpdateAcctResponse
	CreateFsRequest
	CreateFsResponse
	ShowFsRequest
	ShowFsResponse
	DeleteFsRequest
	DeleteFsResponse
	UpdateFsRequest
	UpdateFsResponse
	GrantAddrFsRequest
	GrantAddrFsResponse
	RevokeAddrFsRequest
	RevokeAddrFsResponse
	ValidateAddrFsRequest
	ValidiateAddrFsResponse
*/
package cfsmanage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// Account Profile
type Account struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Region     string `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	Apikey     string `protobuf:"bytes,4,opt,name=apikey" json:"apikey,omitempty"`
	Status     string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	CreateDate int64  `protobuf:"varint,6,opt,name=createDate" json:"createDate,omitempty"`
	DeleteDate int64  `protobuf:"varint,7,opt,name=deleteDate" json:"deleteDate,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// FileSystem Profile
type FileSystem struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Region     string `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	Status     string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	CreateDate int64  `protobuf:"varint,5,opt,name=createDate" json:"createDate,omitempty"`
	DeleteDate int64  `protobuf:"varint,6,opt,name=deleteDate" json:"deleteDate,omitempty"`
}

func (m *FileSystem) Reset()                    { *m = FileSystem{} }
func (m *FileSystem) String() string            { return proto.CompactTextString(m) }
func (*FileSystem) ProtoMessage()               {}
func (*FileSystem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// IP Address Profile
type IPAddress struct {
	Addr string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
}

func (m *IPAddress) Reset()                    { *m = IPAddress{} }
func (m *IPAddress) String() string            { return proto.CompactTextString(m) }
func (*IPAddress) ProtoMessage()               {}
func (*IPAddress) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// Request to Create an account
type CreateAcctRequest struct {
	Region   string `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct     string `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Superkey string `protobuf:"bytes,3,opt,name=superkey" json:"superkey,omitempty"`
}

func (m *CreateAcctRequest) Reset()                    { *m = CreateAcctRequest{} }
func (m *CreateAcctRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAcctRequest) ProtoMessage()               {}
func (*CreateAcctRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// Response for account Create results
type CreateAcctResponse struct {
	Status string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *CreateAcctResponse) Reset()                    { *m = CreateAcctResponse{} }
func (m *CreateAcctResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAcctResponse) ProtoMessage()               {}
func (*CreateAcctResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// Request to show an account
type ShowAcctRequest struct {
	Region   string `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct     string `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Superkey string `protobuf:"bytes,3,opt,name=superkey" json:"superkey,omitempty"`
}

func (m *ShowAcctRequest) Reset()                    { *m = ShowAcctRequest{} }
func (m *ShowAcctRequest) String() string            { return proto.CompactTextString(m) }
func (*ShowAcctRequest) ProtoMessage()               {}
func (*ShowAcctRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

// Response for account Show results
type ShowAcctResponse struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Status  string   `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *ShowAcctResponse) Reset()                    { *m = ShowAcctResponse{} }
func (m *ShowAcctResponse) String() string            { return proto.CompactTextString(m) }
func (*ShowAcctResponse) ProtoMessage()               {}
func (*ShowAcctResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ShowAcctResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

// Request to Delete account
type DeleteAcctRequest struct {
	Region   string `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct     string `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Superkey string `protobuf:"bytes,3,opt,name=superkey" json:"superkey,omitempty"`
}

func (m *DeleteAcctRequest) Reset()                    { *m = DeleteAcctRequest{} }
func (m *DeleteAcctRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAcctRequest) ProtoMessage()               {}
func (*DeleteAcctRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

// Response for account Delete results
type DeleteAcctResponse struct {
	Status string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *DeleteAcctResponse) Reset()                    { *m = DeleteAcctResponse{} }
func (m *DeleteAcctResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAcctResponse) ProtoMessage()               {}
func (*DeleteAcctResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

// Request to Update account's api key
type UpdateAcctRequest struct {
	Region    string `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct      string `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Superkey  string `protobuf:"bytes,3,opt,name=superkey" json:"superkey,omitempty"`
	Newapikey string `protobuf:"bytes,4,opt,name=newapikey" json:"newapikey,omitempty"`
}

func (m *UpdateAcctRequest) Reset()                    { *m = UpdateAcctRequest{} }
func (m *UpdateAcctRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAcctRequest) ProtoMessage()               {}
func (*UpdateAcctRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// Response for account Update results
type UpdateAcctResponse struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Status  string   `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *UpdateAcctResponse) Reset()                    { *m = UpdateAcctResponse{} }
func (m *UpdateAcctResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAcctResponse) ProtoMessage()               {}
func (*UpdateAcctResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UpdateAcctResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

// Request to create a new filesystem
type CreateFsRequest struct {
	Region   string `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct     string `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Filesys  string `protobuf:"bytes,3,opt,name=filesys" json:"filesys,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Apikey   string `protobuf:"bytes,5,opt,name=apikey" json:"apikey,omitempty"`
	Address  string `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
}

func (m *CreateFsRequest) Reset()                    { *m = CreateFsRequest{} }
func (m *CreateFsRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateFsRequest) ProtoMessage()               {}
func (*CreateFsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

// Response from creating a new filesystem
type CreateFsResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *CreateFsResponse) Reset()                    { *m = CreateFsResponse{} }
func (m *CreateFsResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateFsResponse) ProtoMessage()               {}
func (*CreateFsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

// Request to either show a specific file system or
// all the file systems
type ShowFsRequest struct {
	Region   string `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct     string `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Filesys  string `protobuf:"bytes,3,opt,name=filesys" json:"filesys,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Apikey   string `protobuf:"bytes,5,opt,name=apikey" json:"apikey,omitempty"`
}

func (m *ShowFsRequest) Reset()                    { *m = ShowFsRequest{} }
func (m *ShowFsRequest) String() string            { return proto.CompactTextString(m) }
func (*ShowFsRequest) ProtoMessage()               {}
func (*ShowFsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

// Response from showing either an accounts specific
// file system or a list of all an accounts file systems.
type ShowFsResponse struct {
	Filesystems []*FileSystem `protobuf:"bytes,1,rep,name=filesystems" json:"filesystems,omitempty"`
	Ipaddresses []*IPAddress  `protobuf:"bytes,2,rep,name=ipaddresses" json:"ipaddresses,omitempty"`
	Status      string        `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (m *ShowFsResponse) Reset()                    { *m = ShowFsResponse{} }
func (m *ShowFsResponse) String() string            { return proto.CompactTextString(m) }
func (*ShowFsResponse) ProtoMessage()               {}
func (*ShowFsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ShowFsResponse) GetFilesystems() []*FileSystem {
	if m != nil {
		return m.Filesystems
	}
	return nil
}

func (m *ShowFsResponse) GetIpaddresses() []*IPAddress {
	if m != nil {
		return m.Ipaddresses
	}
	return nil
}

// Request to delete a specific file system
type DeleteFsRequest struct {
	Region   string `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct     string `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Filesys  string `protobuf:"bytes,3,opt,name=filesys" json:"filesys,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Apikey   string `protobuf:"bytes,5,opt,name=apikey" json:"apikey,omitempty"`
}

func (m *DeleteFsRequest) Reset()                    { *m = DeleteFsRequest{} }
func (m *DeleteFsRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteFsRequest) ProtoMessage()               {}
func (*DeleteFsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

// Response from deleting a file system
type DeleteFsResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *DeleteFsResponse) Reset()                    { *m = DeleteFsResponse{} }
func (m *DeleteFsResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteFsResponse) ProtoMessage()               {}
func (*DeleteFsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

// Request to update a specific file system's information
type UpdateFsRequest struct {
	Region     string      `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct       string      `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Filesys    string      `protobuf:"bytes,3,opt,name=filesys" json:"filesys,omitempty"`
	Username   string      `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Apikey     string      `protobuf:"bytes,5,opt,name=apikey" json:"apikey,omitempty"`
	Filesystem *FileSystem `protobuf:"bytes,6,opt,name=filesystem" json:"filesystem,omitempty"`
}

func (m *UpdateFsRequest) Reset()                    { *m = UpdateFsRequest{} }
func (m *UpdateFsRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateFsRequest) ProtoMessage()               {}
func (*UpdateFsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *UpdateFsRequest) GetFilesystem() *FileSystem {
	if m != nil {
		return m.Filesystem
	}
	return nil
}

// Response from an update operation
type UpdateFsResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *UpdateFsResponse) Reset()                    { *m = UpdateFsResponse{} }
func (m *UpdateFsResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateFsResponse) ProtoMessage()               {}
func (*UpdateFsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

// Request grant an ip address access to a file system
type GrantAddrFsRequest struct {
	Region    string `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct      string `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Filesys   string `protobuf:"bytes,3,opt,name=filesys" json:"filesys,omitempty"`
	Username  string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Apikey    string `protobuf:"bytes,5,opt,name=apikey" json:"apikey,omitempty"`
	Ipaddress string `protobuf:"bytes,6,opt,name=ipaddress" json:"ipaddress,omitempty"`
}

func (m *GrantAddrFsRequest) Reset()                    { *m = GrantAddrFsRequest{} }
func (m *GrantAddrFsRequest) String() string            { return proto.CompactTextString(m) }
func (*GrantAddrFsRequest) ProtoMessage()               {}
func (*GrantAddrFsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

// Response from granting ip address access to a file system
type GrantAddrFsResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *GrantAddrFsResponse) Reset()                    { *m = GrantAddrFsResponse{} }
func (m *GrantAddrFsResponse) String() string            { return proto.CompactTextString(m) }
func (*GrantAddrFsResponse) ProtoMessage()               {}
func (*GrantAddrFsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

// Request revoke an ip address access to a file system
type RevokeAddrFsRequest struct {
	Region    string `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct      string `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Filesys   string `protobuf:"bytes,3,opt,name=filesys" json:"filesys,omitempty"`
	Username  string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Apikey    string `protobuf:"bytes,5,opt,name=apikey" json:"apikey,omitempty"`
	Ipaddress string `protobuf:"bytes,6,opt,name=ipaddress" json:"ipaddress,omitempty"`
}

func (m *RevokeAddrFsRequest) Reset()                    { *m = RevokeAddrFsRequest{} }
func (m *RevokeAddrFsRequest) String() string            { return proto.CompactTextString(m) }
func (*RevokeAddrFsRequest) ProtoMessage()               {}
func (*RevokeAddrFsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

// Response from revoking ip address access to a file system
type RevokeAddrFsResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *RevokeAddrFsResponse) Reset()                    { *m = RevokeAddrFsResponse{} }
func (m *RevokeAddrFsResponse) String() string            { return proto.CompactTextString(m) }
func (*RevokeAddrFsResponse) ProtoMessage()               {}
func (*RevokeAddrFsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

// Request to validate an addr has access to a file system
type ValidateAddrFsRequest struct {
	Region  string     `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	Acct    string     `protobuf:"bytes,2,opt,name=acct" json:"acct,omitempty"`
	Filesys string     `protobuf:"bytes,3,opt,name=filesys" json:"filesys,omitempty"`
	Addr    *IPAddress `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
}

func (m *ValidateAddrFsRequest) Reset()                    { *m = ValidateAddrFsRequest{} }
func (m *ValidateAddrFsRequest) String() string            { return proto.CompactTextString(m) }
func (*ValidateAddrFsRequest) ProtoMessage()               {}
func (*ValidateAddrFsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ValidateAddrFsRequest) GetAddr() *IPAddress {
	if m != nil {
		return m.Addr
	}
	return nil
}

// Response from validating an addr has access to a file system
type ValidiateAddrFsResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *ValidiateAddrFsResponse) Reset()                    { *m = ValidiateAddrFsResponse{} }
func (m *ValidiateAddrFsResponse) String() string            { return proto.CompactTextString(m) }
func (*ValidiateAddrFsResponse) ProtoMessage()               {}
func (*ValidiateAddrFsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func init() {
	proto.RegisterType((*Account)(nil), "cfsmanage.Account")
	proto.RegisterType((*FileSystem)(nil), "cfsmanage.FileSystem")
	proto.RegisterType((*IPAddress)(nil), "cfsmanage.IPAddress")
	proto.RegisterType((*CreateAcctRequest)(nil), "cfsmanage.CreateAcctRequest")
	proto.RegisterType((*CreateAcctResponse)(nil), "cfsmanage.CreateAcctResponse")
	proto.RegisterType((*ShowAcctRequest)(nil), "cfsmanage.ShowAcctRequest")
	proto.RegisterType((*ShowAcctResponse)(nil), "cfsmanage.ShowAcctResponse")
	proto.RegisterType((*DeleteAcctRequest)(nil), "cfsmanage.DeleteAcctRequest")
	proto.RegisterType((*DeleteAcctResponse)(nil), "cfsmanage.DeleteAcctResponse")
	proto.RegisterType((*UpdateAcctRequest)(nil), "cfsmanage.UpdateAcctRequest")
	proto.RegisterType((*UpdateAcctResponse)(nil), "cfsmanage.UpdateAcctResponse")
	proto.RegisterType((*CreateFsRequest)(nil), "cfsmanage.CreateFsRequest")
	proto.RegisterType((*CreateFsResponse)(nil), "cfsmanage.CreateFsResponse")
	proto.RegisterType((*ShowFsRequest)(nil), "cfsmanage.ShowFsRequest")
	proto.RegisterType((*ShowFsResponse)(nil), "cfsmanage.ShowFsResponse")
	proto.RegisterType((*DeleteFsRequest)(nil), "cfsmanage.DeleteFsRequest")
	proto.RegisterType((*DeleteFsResponse)(nil), "cfsmanage.DeleteFsResponse")
	proto.RegisterType((*UpdateFsRequest)(nil), "cfsmanage.UpdateFsRequest")
	proto.RegisterType((*UpdateFsResponse)(nil), "cfsmanage.UpdateFsResponse")
	proto.RegisterType((*GrantAddrFsRequest)(nil), "cfsmanage.GrantAddrFsRequest")
	proto.RegisterType((*GrantAddrFsResponse)(nil), "cfsmanage.GrantAddrFsResponse")
	proto.RegisterType((*RevokeAddrFsRequest)(nil), "cfsmanage.RevokeAddrFsRequest")
	proto.RegisterType((*RevokeAddrFsResponse)(nil), "cfsmanage.RevokeAddrFsResponse")
	proto.RegisterType((*ValidateAddrFsRequest)(nil), "cfsmanage.ValidateAddrFsRequest")
	proto.RegisterType((*ValidiateAddrFsResponse)(nil), "cfsmanage.ValidiateAddrFsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for CfsManageApi service

type CfsManageApiClient interface {
	// Account commands
	CreateAcct(ctx context.Context, in *CreateAcctRequest, opts ...grpc.CallOption) (*CreateAcctResponse, error)
	ShowAcct(ctx context.Context, in *ShowAcctRequest, opts ...grpc.CallOption) (*ShowAcctResponse, error)
	DeleteAcct(ctx context.Context, in *DeleteAcctRequest, opts ...grpc.CallOption) (*DeleteAcctResponse, error)
	UpdateAcct(ctx context.Context, in *UpdateAcctRequest, opts ...grpc.CallOption) (*UpdateAcctResponse, error)
	// File System commands
	CreateFs(ctx context.Context, in *CreateFsRequest, opts ...grpc.CallOption) (*CreateFsResponse, error)
	ShowFs(ctx context.Context, in *ShowFsRequest, opts ...grpc.CallOption) (*ShowFsResponse, error)
	DeleteFs(ctx context.Context, in *DeleteFsRequest, opts ...grpc.CallOption) (*DeleteFsResponse, error)
	UpdateFs(ctx context.Context, in *UpdateFsRequest, opts ...grpc.CallOption) (*UpdateFsResponse, error)
	GrantAddrFs(ctx context.Context, in *GrantAddrFsRequest, opts ...grpc.CallOption) (*GrantAddrFsResponse, error)
	RevokeAddrFs(ctx context.Context, in *RevokeAddrFsRequest, opts ...grpc.CallOption) (*RevokeAddrFsResponse, error)
	ValidiateAddrFs(ctx context.Context, in *ValidateAddrFsRequest, opts ...grpc.CallOption) (*ValidiateAddrFsResponse, error)
}

type cfsManageApiClient struct {
	cc *grpc.ClientConn
}

func NewCfsManageApiClient(cc *grpc.ClientConn) CfsManageApiClient {
	return &cfsManageApiClient{cc}
}

func (c *cfsManageApiClient) CreateAcct(ctx context.Context, in *CreateAcctRequest, opts ...grpc.CallOption) (*CreateAcctResponse, error) {
	out := new(CreateAcctResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/CreateAcct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cfsManageApiClient) ShowAcct(ctx context.Context, in *ShowAcctRequest, opts ...grpc.CallOption) (*ShowAcctResponse, error) {
	out := new(ShowAcctResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/ShowAcct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cfsManageApiClient) DeleteAcct(ctx context.Context, in *DeleteAcctRequest, opts ...grpc.CallOption) (*DeleteAcctResponse, error) {
	out := new(DeleteAcctResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/DeleteAcct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cfsManageApiClient) UpdateAcct(ctx context.Context, in *UpdateAcctRequest, opts ...grpc.CallOption) (*UpdateAcctResponse, error) {
	out := new(UpdateAcctResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/UpdateAcct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cfsManageApiClient) CreateFs(ctx context.Context, in *CreateFsRequest, opts ...grpc.CallOption) (*CreateFsResponse, error) {
	out := new(CreateFsResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/CreateFs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cfsManageApiClient) ShowFs(ctx context.Context, in *ShowFsRequest, opts ...grpc.CallOption) (*ShowFsResponse, error) {
	out := new(ShowFsResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/ShowFs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cfsManageApiClient) DeleteFs(ctx context.Context, in *DeleteFsRequest, opts ...grpc.CallOption) (*DeleteFsResponse, error) {
	out := new(DeleteFsResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/DeleteFs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cfsManageApiClient) UpdateFs(ctx context.Context, in *UpdateFsRequest, opts ...grpc.CallOption) (*UpdateFsResponse, error) {
	out := new(UpdateFsResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/UpdateFs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cfsManageApiClient) GrantAddrFs(ctx context.Context, in *GrantAddrFsRequest, opts ...grpc.CallOption) (*GrantAddrFsResponse, error) {
	out := new(GrantAddrFsResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/GrantAddrFs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cfsManageApiClient) RevokeAddrFs(ctx context.Context, in *RevokeAddrFsRequest, opts ...grpc.CallOption) (*RevokeAddrFsResponse, error) {
	out := new(RevokeAddrFsResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/RevokeAddrFs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cfsManageApiClient) ValidiateAddrFs(ctx context.Context, in *ValidateAddrFsRequest, opts ...grpc.CallOption) (*ValidiateAddrFsResponse, error) {
	out := new(ValidiateAddrFsResponse)
	err := grpc.Invoke(ctx, "/cfsmanage.CfsManageApi/ValidiateAddrFs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CfsManageApi service

type CfsManageApiServer interface {
	// Account commands
	CreateAcct(context.Context, *CreateAcctRequest) (*CreateAcctResponse, error)
	ShowAcct(context.Context, *ShowAcctRequest) (*ShowAcctResponse, error)
	DeleteAcct(context.Context, *DeleteAcctRequest) (*DeleteAcctResponse, error)
	UpdateAcct(context.Context, *UpdateAcctRequest) (*UpdateAcctResponse, error)
	// File System commands
	CreateFs(context.Context, *CreateFsRequest) (*CreateFsResponse, error)
	ShowFs(context.Context, *ShowFsRequest) (*ShowFsResponse, error)
	DeleteFs(context.Context, *DeleteFsRequest) (*DeleteFsResponse, error)
	UpdateFs(context.Context, *UpdateFsRequest) (*UpdateFsResponse, error)
	GrantAddrFs(context.Context, *GrantAddrFsRequest) (*GrantAddrFsResponse, error)
	RevokeAddrFs(context.Context, *RevokeAddrFsRequest) (*RevokeAddrFsResponse, error)
	ValidiateAddrFs(context.Context, *ValidateAddrFsRequest) (*ValidiateAddrFsResponse, error)
}

func RegisterCfsManageApiServer(s *grpc.Server, srv CfsManageApiServer) {
	s.RegisterService(&_CfsManageApi_serviceDesc, srv)
}

func _CfsManageApi_CreateAcct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CreateAcctRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).CreateAcct(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CfsManageApi_ShowAcct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ShowAcctRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).ShowAcct(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CfsManageApi_DeleteAcct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DeleteAcctRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).DeleteAcct(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CfsManageApi_UpdateAcct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(UpdateAcctRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).UpdateAcct(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CfsManageApi_CreateFs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CreateFsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).CreateFs(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CfsManageApi_ShowFs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ShowFsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).ShowFs(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CfsManageApi_DeleteFs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DeleteFsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).DeleteFs(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CfsManageApi_UpdateFs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(UpdateFsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).UpdateFs(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CfsManageApi_GrantAddrFs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GrantAddrFsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).GrantAddrFs(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CfsManageApi_RevokeAddrFs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(RevokeAddrFsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).RevokeAddrFs(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CfsManageApi_ValidiateAddrFs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ValidateAddrFsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CfsManageApiServer).ValidiateAddrFs(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _CfsManageApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cfsmanage.CfsManageApi",
	HandlerType: (*CfsManageApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAcct",
			Handler:    _CfsManageApi_CreateAcct_Handler,
		},
		{
			MethodName: "ShowAcct",
			Handler:    _CfsManageApi_ShowAcct_Handler,
		},
		{
			MethodName: "DeleteAcct",
			Handler:    _CfsManageApi_DeleteAcct_Handler,
		},
		{
			MethodName: "UpdateAcct",
			Handler:    _CfsManageApi_UpdateAcct_Handler,
		},
		{
			MethodName: "CreateFs",
			Handler:    _CfsManageApi_CreateFs_Handler,
		},
		{
			MethodName: "ShowFs",
			Handler:    _CfsManageApi_ShowFs_Handler,
		},
		{
			MethodName: "DeleteFs",
			Handler:    _CfsManageApi_DeleteFs_Handler,
		},
		{
			MethodName: "UpdateFs",
			Handler:    _CfsManageApi_UpdateFs_Handler,
		},
		{
			MethodName: "GrantAddrFs",
			Handler:    _CfsManageApi_GrantAddrFs_Handler,
		},
		{
			MethodName: "RevokeAddrFs",
			Handler:    _CfsManageApi_RevokeAddrFs_Handler,
		},
		{
			MethodName: "ValidiateAddrFs",
			Handler:    _CfsManageApi_ValidiateAddrFs_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 712 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x56, 0xd9, 0x6e, 0xd3, 0x40,
	0x14, 0xed, 0x92, 0x26, 0xcd, 0x4d, 0xa9, 0xdb, 0x69, 0x2b, 0x5c, 0xb3, 0x55, 0xc3, 0x22, 0xca,
	0x43, 0x1f, 0xca, 0x07, 0xa0, 0x28, 0xa5, 0x55, 0x85, 0x40, 0xd0, 0x8a, 0x4a, 0xbc, 0x31, 0x4d,
	0x26, 0xc5, 0x34, 0xb1, 0x8d, 0xc7, 0x21, 0x44, 0x7c, 0x03, 0xff, 0xc6, 0x27, 0x31, 0x9e, 0xb1,
	0x3d, 0x8b, 0x6d, 0x09, 0x14, 0x85, 0x87, 0x4a, 0xf5, 0x8c, 0x7d, 0xce, 0xb9, 0xe7, 0x6e, 0x01,
	0xa7, 0x3f, 0x64, 0x63, 0x12, 0x90, 0x1b, 0x7a, 0x14, 0xc5, 0x61, 0x12, 0xa2, 0x76, 0x71, 0x80,
	0x7f, 0x42, 0xab, 0xdb, 0xef, 0x87, 0x93, 0x20, 0x41, 0x00, 0x2b, 0xfe, 0xc0, 0x5d, 0x3e, 0x58,
	0x7e, 0xde, 0x46, 0x1b, 0xd0, 0x08, 0xc8, 0x98, 0xba, 0x2b, 0xe2, 0x69, 0x13, 0x9a, 0x31, 0xbd,
	0xf1, 0xc3, 0xc0, 0x5d, 0xcd, 0x9f, 0x49, 0xe4, 0xdf, 0xd2, 0x99, 0xdb, 0xc8, 0x9f, 0x59, 0x42,
	0x92, 0x09, 0x73, 0xd7, 0xc4, 0x33, 0x87, 0xea, 0xc7, 0x94, 0x24, 0xf4, 0x84, 0xff, 0xb9, 0x4d,
	0x7e, 0xb6, 0x9a, 0x9e, 0x0d, 0xe8, 0x88, 0x66, 0x67, 0xad, 0xf4, 0x0c, 0x07, 0x00, 0xa7, 0xfe,
	0x88, 0x5e, 0xce, 0x58, 0x42, 0xc7, 0xff, 0xc6, 0x9f, 0xf1, 0x35, 0x2a, 0xf8, 0xd6, 0x2a, 0xf8,
	0x84, 0x06, 0xbc, 0x0f, 0xed, 0xf3, 0xf7, 0xdd, 0xc1, 0x20, 0xa6, 0x8c, 0xa5, 0x14, 0x84, 0xff,
	0x2b, 0x09, 0x71, 0x0f, 0xb6, 0x7b, 0x02, 0x82, 0xbb, 0x91, 0x5c, 0xd0, 0x6f, 0x13, 0xca, 0x12,
	0x8d, 0xb7, 0x50, 0x45, 0xf8, 0x75, 0xa6, 0x6a, 0x0b, 0xd6, 0xd9, 0x24, 0xa2, 0x71, 0xea, 0x83,
	0xd0, 0x85, 0x9f, 0x00, 0xd2, 0x41, 0x58, 0x14, 0x06, 0x8c, 0x6a, 0x6a, 0xc5, 0x77, 0xb8, 0x0b,
	0xce, 0xe5, 0x97, 0x70, 0x3a, 0x0f, 0xd1, 0x19, 0x6c, 0x29, 0x88, 0x8c, 0xe6, 0x31, 0xb4, 0x88,
	0xcc, 0xa4, 0x00, 0xe9, 0x1c, 0xa3, 0x23, 0x95, 0xf7, 0x3c, 0xc7, 0xb6, 0x16, 0x1e, 0xf6, 0x89,
	0x70, 0x69, 0xce, 0xb0, 0x75, 0x90, 0x9a, 0xb0, 0xaf, 0x60, 0xfb, 0x63, 0x34, 0x98, 0xcf, 0x61,
	0xb4, 0x0d, 0xed, 0x80, 0x4e, 0xf5, 0xe2, 0xc3, 0xe7, 0x80, 0x74, 0xdc, 0x79, 0xdc, 0x60, 0xe0,
	0xc8, 0xfc, 0x9d, 0xb2, 0xbf, 0x13, 0xe8, 0x40, 0x6b, 0xc8, 0x0b, 0x98, 0xcd, 0x58, 0xa6, 0x8f,
	0x2b, 0x9e, 0x30, 0x1a, 0x8b, 0xda, 0x6d, 0x58, 0xbd, 0xb2, 0x96, 0x7f, 0x42, 0x64, 0x05, 0x8a,
	0xa2, 0x6c, 0x63, 0x0c, 0x5b, 0x8a, 0xb4, 0xe4, 0x9d, 0xac, 0xce, 0xcf, 0x70, 0x27, 0xcd, 0xf7,
	0xe2, 0x64, 0xe1, 0x29, 0x6c, 0xe6, 0x0c, 0x99, 0x86, 0x17, 0xd0, 0xc9, 0x40, 0x78, 0x73, 0xa6,
	0x42, 0x56, 0xb9, 0x8b, 0x7b, 0x9a, 0x8b, 0x5a, 0xeb, 0x1e, 0x42, 0xc7, 0x8f, 0xb2, 0xb0, 0x68,
	0xea, 0x66, 0xfa, 0xee, 0xae, 0xf6, 0xae, 0x6a, 0x3b, 0x15, 0x9a, 0x2c, 0x9e, 0x6b, 0x70, 0x64,
	0xf1, 0x2c, 0x30, 0x38, 0x6e, 0xb1, 0xe2, 0xa8, 0xb1, 0xf8, 0xd7, 0x32, 0x38, 0xb2, 0x8e, 0x16,
	0x98, 0xfc, 0x43, 0x00, 0xe5, 0xa9, 0xc8, 0x7f, 0x9d, 0xa5, 0xa9, 0x66, 0x25, 0xa7, 0x46, 0xf3,
	0x0f, 0x40, 0x67, 0x31, 0x09, 0x92, 0xd4, 0xdb, 0x05, 0xaa, 0xe6, 0x4d, 0x57, 0x64, 0x37, 0x2b,
	0xda, 0xa7, 0xb0, 0x63, 0x30, 0xd7, 0x08, 0x9c, 0xc1, 0xce, 0x05, 0xfd, 0x1e, 0xde, 0xd2, 0xff,
	0xaf, 0xf0, 0x19, 0xec, 0x9a, 0xd4, 0x35, 0x12, 0xbf, 0xc2, 0xde, 0x15, 0x19, 0xf9, 0x62, 0x80,
	0xcc, 0x23, 0x12, 0x67, 0xeb, 0xa4, 0x21, 0x92, 0x5a, 0x59, 0xfb, 0xf8, 0x10, 0xee, 0x0a, 0x2e,
	0x5f, 0x23, 0xab, 0x96, 0x75, 0xfc, 0xbb, 0x09, 0x1b, 0xbd, 0x21, 0x7b, 0x2b, 0x20, 0xba, 0x91,
	0x8f, 0xde, 0x00, 0xa8, 0xdd, 0x82, 0xee, 0x6b, 0xf8, 0xa5, 0xbd, 0xe5, 0x3d, 0xa8, 0xb9, 0x95,
	0x5c, 0x78, 0x09, 0xbd, 0x86, 0xf5, 0x7c, 0x7f, 0x20, 0x4f, 0x7b, 0xd9, 0xda, 0x4b, 0xde, 0xbd,
	0xca, 0xbb, 0x02, 0x86, 0x6b, 0x52, 0x83, 0xdf, 0xd0, 0x54, 0x5a, 0x2a, 0x86, 0xa6, 0xf2, 0xb6,
	0x90, 0x60, 0x6a, 0x8e, 0x1b, 0x60, 0xa5, 0xb5, 0x61, 0x80, 0x95, 0x87, 0xbf, 0x0c, 0x30, 0x1f,
	0xaa, 0x46, 0x80, 0xd6, 0x78, 0x37, 0x02, 0xb4, 0xa7, 0x30, 0x87, 0x79, 0x05, 0x4d, 0x39, 0x15,
	0x91, 0x6b, 0x39, 0xa1, 0x20, 0xf6, 0x2b, 0x6e, 0x74, 0x1d, 0xf9, 0xe4, 0x31, 0x74, 0x58, 0x23,
	0xcf, 0xd0, 0x61, 0x8f, 0x2a, 0x09, 0x93, 0x0f, 0x03, 0x03, 0xc6, 0x1a, 0x58, 0x06, 0x8c, 0x3d,
	0x3d, 0x38, 0xcc, 0x3b, 0xe8, 0x68, 0x5d, 0x8b, 0x74, 0x17, 0xcb, 0x73, 0xc4, 0x7b, 0x58, 0x77,
	0x5d, 0xe0, 0x7d, 0x80, 0x0d, 0xbd, 0xc7, 0x90, 0xfe, 0x45, 0x45, 0xdf, 0x7b, 0x8f, 0x6a, 0xef,
	0x0b, 0xc8, 0x4f, 0xe0, 0x58, 0x2d, 0x82, 0x0e, 0xb4, 0xaf, 0x2a, 0x5b, 0xd5, 0xc3, 0xf6, 0x1b,
	0xe5, 0x06, 0xc3, 0x4b, 0xd7, 0x4d, 0xf1, 0xe3, 0xf7, 0xe5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xa0, 0x30, 0xcc, 0x25, 0x0f, 0x0b, 0x00, 0x00,
}
