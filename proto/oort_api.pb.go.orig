// Code generated by protoc-gen-go.
// source: oort_api.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	oort_api.proto

It has these top-level messages:
	Node
	LookupRequest
	Attr
	SetAttrRequest
	ReadRequest
	FileChunk
	WriteResponse
	DirEnt
	DirEntries
	SymlinkRequest
	ReadlinkResponse
	GetxattrRequest
	GetxattrResponse
	SetxattrRequest
	SetxattrResponse
	ListxattrRequest
	ListxattrResponse
	RemovexattrRequest
	RemovexattrResponse
	RenameRequest
	RenameResponse
	StatfsRequest
	StatfsResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Node is the file inode
type Node struct {
	Inode uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto1.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Lookup
type LookupRequest struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent uint64 `protobuf:"varint,2,opt,name=parent" json:"parent,omitempty"`
}

func (m *LookupRequest) Reset()                    { *m = LookupRequest{} }
func (m *LookupRequest) String() string            { return proto1.CompactTextString(m) }
func (*LookupRequest) ProtoMessage()               {}
func (*LookupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Attr. fields are optional by default in proto3, so
// clients don't have to send all fields when performing an
// attr update for example. These might not all be needed
// but i got tired of constantly forgetting fields.
type Attr struct {
	Inode  uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Atime  int64  `protobuf:"varint,2,opt,name=atime" json:"atime,omitempty"`
	Mtime  int64  `protobuf:"varint,3,opt,name=mtime" json:"mtime,omitempty"`
	Ctime  int64  `protobuf:"varint,4,opt,name=ctime" json:"ctime,omitempty"`
	Crtime int64  `protobuf:"varint,5,opt,name=crtime" json:"crtime,omitempty"`
	Mode   uint32 `protobuf:"varint,6,opt,name=mode" json:"mode,omitempty"`
	Valid  int32  `protobuf:"varint,7,opt,name=valid" json:"valid,omitempty"`
	Size   uint64 `protobuf:"varint,8,opt,name=size" json:"size,omitempty"`
	Uid    uint32 `protobuf:"varint,9,opt,name=uid" json:"uid,omitempty"`
	Gid    uint32 `protobuf:"varint,10,opt,name=gid" json:"gid,omitempty"`
}

func (m *Attr) Reset()                    { *m = Attr{} }
func (m *Attr) String() string            { return proto1.CompactTextString(m) }
func (*Attr) ProtoMessage()               {}
func (*Attr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type SetAttrRequest struct {
	SetMode  bool   `protobuf:"varint,1,opt,name=setMode" json:"setMode,omitempty"`
	SetMtime bool   `protobuf:"varint,2,opt,name=setMtime" json:"setMtime,omitempty"`
	SetSize  bool   `protobuf:"varint,3,opt,name=setSize" json:"setSize,omitempty"`
	SetUid   bool   `protobuf:"varint,4,opt,name=setUid" json:"setUid,omitempty"`
	SetGid   bool   `protobuf:"varint,5,opt,name=setGid" json:"setGid,omitempty"`
	Inode    uint64 `protobuf:"varint,6,opt,name=inode" json:"inode,omitempty"`
	Mtime    int64  `protobuf:"varint,7,opt,name=mtime" json:"mtime,omitempty"`
	Mode     uint32 `protobuf:"varint,8,opt,name=mode" json:"mode,omitempty"`
	Size     uint64 `protobuf:"varint,9,opt,name=size" json:"size,omitempty"`
	Uid      uint32 `protobuf:"varint,10,opt,name=uid" json:"uid,omitempty"`
	Gid      uint32 `protobuf:"varint,11,opt,name=gid" json:"gid,omitempty"`
}

func (m *SetAttrRequest) Reset()                    { *m = SetAttrRequest{} }
func (m *SetAttrRequest) String() string            { return proto1.CompactTextString(m) }
func (*SetAttrRequest) ProtoMessage()               {}
func (*SetAttrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// ReqadRequest
type ReadRequest struct {
	Inode  uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Size   int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto1.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// WriteRequest
type FileChunk struct {
	Inode   uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Offset  int64  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Payload []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *FileChunk) Reset()                    { *m = FileChunk{} }
func (m *FileChunk) String() string            { return proto1.CompactTextString(m) }
func (*FileChunk) ProtoMessage()               {}
func (*FileChunk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

// WriteResponse place holder. Maybe use an enum so
// we can map to fuse errors ?
type WriteResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
}

func (m *WriteResponse) Reset()                    { *m = WriteResponse{} }
func (m *WriteResponse) String() string            { return proto1.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()               {}
func (*WriteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// DirEnt is a directory entry
type DirEnt struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent uint64 `protobuf:"varint,2,opt,name=parent" json:"parent,omitempty"`
	Attr   *Attr  `protobuf:"bytes,3,opt,name=attr" json:"attr,omitempty"`
}

func (m *DirEnt) Reset()                    { *m = DirEnt{} }
func (m *DirEnt) String() string            { return proto1.CompactTextString(m) }
func (*DirEnt) ProtoMessage()               {}
func (*DirEnt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DirEnt) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

// DirEntries just contains a list of directory entries
type DirEntries struct {
	DirEntries  []*DirEnt `protobuf:"bytes,1,rep,name=DirEntries" json:"DirEntries,omitempty"`
	FileEntries []*DirEnt `protobuf:"bytes,2,rep,name=FileEntries" json:"FileEntries,omitempty"`
}

func (m *DirEntries) Reset()                    { *m = DirEntries{} }
func (m *DirEntries) String() string            { return proto1.CompactTextString(m) }
func (*DirEntries) ProtoMessage()               {}
func (*DirEntries) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DirEntries) GetDirEntries() []*DirEnt {
	if m != nil {
		return m.DirEntries
	}
	return nil
}

func (m *DirEntries) GetFileEntries() []*DirEnt {
	if m != nil {
		return m.FileEntries
	}
	return nil
}

// Symlink
type SymlinkRequest struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent uint64 `protobuf:"varint,2,opt,name=parent" json:"parent,omitempty"`
	Target string `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
}

func (m *SymlinkRequest) Reset()                    { *m = SymlinkRequest{} }
func (m *SymlinkRequest) String() string            { return proto1.CompactTextString(m) }
func (*SymlinkRequest) ProtoMessage()               {}
func (*SymlinkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// Readlink
type ReadlinkResponse struct {
	Target string `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
}

func (m *ReadlinkResponse) Reset()                    { *m = ReadlinkResponse{} }
func (m *ReadlinkResponse) String() string            { return proto1.CompactTextString(m) }
func (*ReadlinkResponse) ProtoMessage()               {}
func (*ReadlinkResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

// Getxattr
type GetxattrRequest struct {
	Inode    uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Size     uint32 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Position uint32 `protobuf:"varint,4,opt,name=position" json:"position,omitempty"`
}

func (m *GetxattrRequest) Reset()                    { *m = GetxattrRequest{} }
func (m *GetxattrRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetxattrRequest) ProtoMessage()               {}
func (*GetxattrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type GetxattrResponse struct {
	Xattr []byte `protobuf:"bytes,1,opt,name=xattr,proto3" json:"xattr,omitempty"`
}

func (m *GetxattrResponse) Reset()                    { *m = GetxattrResponse{} }
func (m *GetxattrResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetxattrResponse) ProtoMessage()               {}
func (*GetxattrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

// Setxattr
type SetxattrRequest struct {
	Inode    uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Xattr    []byte `protobuf:"bytes,3,opt,name=xattr,proto3" json:"xattr,omitempty"`
	Position uint32 `protobuf:"varint,4,opt,name=position" json:"position,omitempty"`
	Flags    uint32 `protobuf:"varint,5,opt,name=flags" json:"flags,omitempty"`
}

func (m *SetxattrRequest) Reset()                    { *m = SetxattrRequest{} }
func (m *SetxattrRequest) String() string            { return proto1.CompactTextString(m) }
func (*SetxattrRequest) ProtoMessage()               {}
func (*SetxattrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type SetxattrResponse struct {
}

func (m *SetxattrResponse) Reset()                    { *m = SetxattrResponse{} }
func (m *SetxattrResponse) String() string            { return proto1.CompactTextString(m) }
func (*SetxattrResponse) ProtoMessage()               {}
func (*SetxattrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

// Listxattr
type ListxattrRequest struct {
	Inode    uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Size     uint32 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Position uint32 `protobuf:"varint,3,opt,name=position" json:"position,omitempty"`
}

func (m *ListxattrRequest) Reset()                    { *m = ListxattrRequest{} }
func (m *ListxattrRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListxattrRequest) ProtoMessage()               {}
func (*ListxattrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type ListxattrResponse struct {
	Xattr []byte `protobuf:"bytes,1,opt,name=xattr,proto3" json:"xattr,omitempty"`
}

func (m *ListxattrResponse) Reset()                    { *m = ListxattrResponse{} }
func (m *ListxattrResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListxattrResponse) ProtoMessage()               {}
func (*ListxattrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

// Removexattr
type RemovexattrRequest struct {
	Inode uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *RemovexattrRequest) Reset()                    { *m = RemovexattrRequest{} }
func (m *RemovexattrRequest) String() string            { return proto1.CompactTextString(m) }
func (*RemovexattrRequest) ProtoMessage()               {}
func (*RemovexattrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type RemovexattrResponse struct {
}

func (m *RemovexattrResponse) Reset()                    { *m = RemovexattrResponse{} }
func (m *RemovexattrResponse) String() string            { return proto1.CompactTextString(m) }
func (*RemovexattrResponse) ProtoMessage()               {}
func (*RemovexattrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

// Rename
type RenameRequest struct {
	Parent  uint64 `protobuf:"varint,1,opt,name=parent" json:"parent,omitempty"`
	NewDir  uint64 `protobuf:"varint,2,opt,name=newDir" json:"newDir,omitempty"`
	OldName string `protobuf:"bytes,3,opt,name=oldName" json:"oldName,omitempty"`
	NewName string `protobuf:"bytes,4,opt,name=newName" json:"newName,omitempty"`
}

func (m *RenameRequest) Reset()                    { *m = RenameRequest{} }
func (m *RenameRequest) String() string            { return proto1.CompactTextString(m) }
func (*RenameRequest) ProtoMessage()               {}
func (*RenameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type RenameResponse struct {
}

func (m *RenameResponse) Reset()                    { *m = RenameResponse{} }
func (m *RenameResponse) String() string            { return proto1.CompactTextString(m) }
func (*RenameResponse) ProtoMessage()               {}
func (*RenameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

// Statfs
type StatfsRequest struct {
}

func (m *StatfsRequest) Reset()                    { *m = StatfsRequest{} }
func (m *StatfsRequest) String() string            { return proto1.CompactTextString(m) }
func (*StatfsRequest) ProtoMessage()               {}
func (*StatfsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type StatfsResponse struct {
	Blocks  uint64 `protobuf:"varint,1,opt,name=blocks" json:"blocks,omitempty"`
	Bfree   uint64 `protobuf:"varint,2,opt,name=bfree" json:"bfree,omitempty"`
	Bavail  uint64 `protobuf:"varint,3,opt,name=bavail" json:"bavail,omitempty"`
	Files   uint64 `protobuf:"varint,4,opt,name=files" json:"files,omitempty"`
	Ffree   uint64 `protobuf:"varint,5,opt,name=ffree" json:"ffree,omitempty"`
	Bsize   uint32 `protobuf:"varint,6,opt,name=bsize" json:"bsize,omitempty"`
	Namelen uint32 `protobuf:"varint,7,opt,name=namelen" json:"namelen,omitempty"`
	Frsize  uint32 `protobuf:"varint,8,opt,name=frsize" json:"frsize,omitempty"`
}

func (m *StatfsResponse) Reset()                    { *m = StatfsResponse{} }
func (m *StatfsResponse) String() string            { return proto1.CompactTextString(m) }
func (*StatfsResponse) ProtoMessage()               {}
func (*StatfsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func init() {
	proto1.RegisterType((*Node)(nil), "proto.Node")
	proto1.RegisterType((*LookupRequest)(nil), "proto.LookupRequest")
	proto1.RegisterType((*Attr)(nil), "proto.Attr")
	proto1.RegisterType((*SetAttrRequest)(nil), "proto.SetAttrRequest")
	proto1.RegisterType((*ReadRequest)(nil), "proto.ReadRequest")
	proto1.RegisterType((*FileChunk)(nil), "proto.FileChunk")
	proto1.RegisterType((*WriteResponse)(nil), "proto.WriteResponse")
	proto1.RegisterType((*DirEnt)(nil), "proto.DirEnt")
	proto1.RegisterType((*DirEntries)(nil), "proto.DirEntries")
	proto1.RegisterType((*SymlinkRequest)(nil), "proto.SymlinkRequest")
	proto1.RegisterType((*ReadlinkResponse)(nil), "proto.ReadlinkResponse")
	proto1.RegisterType((*GetxattrRequest)(nil), "proto.GetxattrRequest")
	proto1.RegisterType((*GetxattrResponse)(nil), "proto.GetxattrResponse")
	proto1.RegisterType((*SetxattrRequest)(nil), "proto.SetxattrRequest")
	proto1.RegisterType((*SetxattrResponse)(nil), "proto.SetxattrResponse")
	proto1.RegisterType((*ListxattrRequest)(nil), "proto.ListxattrRequest")
	proto1.RegisterType((*ListxattrResponse)(nil), "proto.ListxattrResponse")
	proto1.RegisterType((*RemovexattrRequest)(nil), "proto.RemovexattrRequest")
	proto1.RegisterType((*RemovexattrResponse)(nil), "proto.RemovexattrResponse")
	proto1.RegisterType((*RenameRequest)(nil), "proto.RenameRequest")
	proto1.RegisterType((*RenameResponse)(nil), "proto.RenameResponse")
	proto1.RegisterType((*StatfsRequest)(nil), "proto.StatfsRequest")
	proto1.RegisterType((*StatfsResponse)(nil), "proto.StatfsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Api service

type ApiClient interface {
	SetAttr(ctx context.Context, in *SetAttrRequest, opts ...grpc.CallOption) (*Attr, error)
	GetAttr(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Attr, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*FileChunk, error)
	Write(ctx context.Context, in *FileChunk, opts ...grpc.CallOption) (*WriteResponse, error)
	MkDir(ctx context.Context, in *DirEnt, opts ...grpc.CallOption) (*DirEnt, error)
	Create(ctx context.Context, in *DirEnt, opts ...grpc.CallOption) (*DirEnt, error)
	Remove(ctx context.Context, in *DirEnt, opts ...grpc.CallOption) (*WriteResponse, error)
	Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*DirEnt, error)
	ReadDirAll(ctx context.Context, in *Node, opts ...grpc.CallOption) (*DirEntries, error)
	Symlink(ctx context.Context, in *SymlinkRequest, opts ...grpc.CallOption) (*DirEnt, error)
	Readlink(ctx context.Context, in *Node, opts ...grpc.CallOption) (*ReadlinkResponse, error)
	Getxattr(ctx context.Context, in *GetxattrRequest, opts ...grpc.CallOption) (*GetxattrResponse, error)
	Setxattr(ctx context.Context, in *SetxattrRequest, opts ...grpc.CallOption) (*SetxattrResponse, error)
	Listxattr(ctx context.Context, in *ListxattrRequest, opts ...grpc.CallOption) (*ListxattrResponse, error)
	Removexattr(ctx context.Context, in *RemovexattrRequest, opts ...grpc.CallOption) (*RemovexattrResponse, error)
	Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error)
	Statfs(ctx context.Context, in *StatfsRequest, opts ...grpc.CallOption) (*StatfsResponse, error)
}

type apiClient struct {
	cc *grpc.ClientConn
}

func NewApiClient(cc *grpc.ClientConn) ApiClient {
	return &apiClient{cc}
}

func (c *apiClient) SetAttr(ctx context.Context, in *SetAttrRequest, opts ...grpc.CallOption) (*Attr, error) {
	out := new(Attr)
	err := grpc.Invoke(ctx, "/proto.Api/SetAttr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetAttr(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Attr, error) {
	out := new(Attr)
	err := grpc.Invoke(ctx, "/proto.Api/GetAttr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*FileChunk, error) {
	out := new(FileChunk)
	err := grpc.Invoke(ctx, "/proto.Api/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Write(ctx context.Context, in *FileChunk, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Write", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) MkDir(ctx context.Context, in *DirEnt, opts ...grpc.CallOption) (*DirEnt, error) {
	out := new(DirEnt)
	err := grpc.Invoke(ctx, "/proto.Api/MkDir", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Create(ctx context.Context, in *DirEnt, opts ...grpc.CallOption) (*DirEnt, error) {
	out := new(DirEnt)
	err := grpc.Invoke(ctx, "/proto.Api/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Remove(ctx context.Context, in *DirEnt, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*DirEnt, error) {
	out := new(DirEnt)
	err := grpc.Invoke(ctx, "/proto.Api/Lookup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) ReadDirAll(ctx context.Context, in *Node, opts ...grpc.CallOption) (*DirEntries, error) {
	out := new(DirEntries)
	err := grpc.Invoke(ctx, "/proto.Api/ReadDirAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Symlink(ctx context.Context, in *SymlinkRequest, opts ...grpc.CallOption) (*DirEnt, error) {
	out := new(DirEnt)
	err := grpc.Invoke(ctx, "/proto.Api/Symlink", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Readlink(ctx context.Context, in *Node, opts ...grpc.CallOption) (*ReadlinkResponse, error) {
	out := new(ReadlinkResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Readlink", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Getxattr(ctx context.Context, in *GetxattrRequest, opts ...grpc.CallOption) (*GetxattrResponse, error) {
	out := new(GetxattrResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Getxattr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Setxattr(ctx context.Context, in *SetxattrRequest, opts ...grpc.CallOption) (*SetxattrResponse, error) {
	out := new(SetxattrResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Setxattr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Listxattr(ctx context.Context, in *ListxattrRequest, opts ...grpc.CallOption) (*ListxattrResponse, error) {
	out := new(ListxattrResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Listxattr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Removexattr(ctx context.Context, in *RemovexattrRequest, opts ...grpc.CallOption) (*RemovexattrResponse, error) {
	out := new(RemovexattrResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Removexattr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error) {
	out := new(RenameResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Rename", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Statfs(ctx context.Context, in *StatfsRequest, opts ...grpc.CallOption) (*StatfsResponse, error) {
	out := new(StatfsResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Statfs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Api service

type ApiServer interface {
	SetAttr(context.Context, *SetAttrRequest) (*Attr, error)
	GetAttr(context.Context, *Node) (*Attr, error)
	Read(context.Context, *ReadRequest) (*FileChunk, error)
	Write(context.Context, *FileChunk) (*WriteResponse, error)
	MkDir(context.Context, *DirEnt) (*DirEnt, error)
	Create(context.Context, *DirEnt) (*DirEnt, error)
	Remove(context.Context, *DirEnt) (*WriteResponse, error)
	Lookup(context.Context, *LookupRequest) (*DirEnt, error)
	ReadDirAll(context.Context, *Node) (*DirEntries, error)
	Symlink(context.Context, *SymlinkRequest) (*DirEnt, error)
	Readlink(context.Context, *Node) (*ReadlinkResponse, error)
	Getxattr(context.Context, *GetxattrRequest) (*GetxattrResponse, error)
	Setxattr(context.Context, *SetxattrRequest) (*SetxattrResponse, error)
	Listxattr(context.Context, *ListxattrRequest) (*ListxattrResponse, error)
	Removexattr(context.Context, *RemovexattrRequest) (*RemovexattrResponse, error)
	Rename(context.Context, *RenameRequest) (*RenameResponse, error)
	Statfs(context.Context, *StatfsRequest) (*StatfsResponse, error)
}

func RegisterApiServer(s *grpc.Server, srv ApiServer) {
	s.RegisterService(&_Api_serviceDesc, srv)
}

func _Api_SetAttr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(SetAttrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).SetAttr(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_GetAttr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).GetAttr(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Read(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(FileChunk)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Write(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_MkDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DirEnt)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).MkDir(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DirEnt)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Create(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DirEnt)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Remove(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Lookup(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_ReadDirAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).ReadDirAll(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Symlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(SymlinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Symlink(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Readlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Readlink(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Getxattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetxattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Getxattr(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Setxattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(SetxattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Setxattr(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Listxattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ListxattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Listxattr(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Removexattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(RemovexattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Removexattr(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(RenameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Rename(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Api_Statfs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(StatfsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServer).Statfs(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Api_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Api",
	HandlerType: (*ApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetAttr",
			Handler:    _Api_SetAttr_Handler,
		},
		{
			MethodName: "GetAttr",
			Handler:    _Api_GetAttr_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _Api_Read_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _Api_Write_Handler,
		},
		{
			MethodName: "MkDir",
			Handler:    _Api_MkDir_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Api_Create_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Api_Remove_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _Api_Lookup_Handler,
		},
		{
			MethodName: "ReadDirAll",
			Handler:    _Api_ReadDirAll_Handler,
		},
		{
			MethodName: "Symlink",
			Handler:    _Api_Symlink_Handler,
		},
		{
			MethodName: "Readlink",
			Handler:    _Api_Readlink_Handler,
		},
		{
			MethodName: "Getxattr",
			Handler:    _Api_Getxattr_Handler,
		},
		{
			MethodName: "Setxattr",
			Handler:    _Api_Setxattr_Handler,
		},
		{
			MethodName: "Listxattr",
			Handler:    _Api_Listxattr_Handler,
		},
		{
			MethodName: "Removexattr",
			Handler:    _Api_Removexattr_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _Api_Rename_Handler,
		},
		{
			MethodName: "Statfs",
			Handler:    _Api_Statfs_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 898 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x55, 0x4f, 0x6f, 0xeb, 0x44,
	0x10, 0x6f, 0x12, 0x3b, 0x7f, 0x26, 0x75, 0x92, 0xb7, 0x50, 0xc8, 0xf3, 0x05, 0xde, 0x4a, 0x88,
	0x77, 0x21, 0x4f, 0xaf, 0x1c, 0x90, 0x40, 0x20, 0xa2, 0x07, 0xed, 0xa5, 0xad, 0x44, 0x2c, 0xc4,
	0x0d, 0xb4, 0x69, 0x36, 0xc5, 0x8a, 0x63, 0x1b, 0xdb, 0x29, 0x94, 0x0f, 0xc0, 0x8d, 0x33, 0x5f,
	0x85, 0x8f, 0xc7, 0xec, 0x78, 0x77, 0x63, 0x3b, 0xad, 0x52, 0x4e, 0xc9, 0xcc, 0xfe, 0xe6, 0x37,
	0x7f, 0x76, 0xf6, 0x67, 0x18, 0x25, 0x49, 0x56, 0xfc, 0x22, 0xd2, 0x70, 0x96, 0x66, 0x49, 0x91,
	0x30, 0x97, 0x7e, 0xf8, 0x19, 0x38, 0x37, 0xc9, 0x4a, 0x32, 0x0f, 0xdc, 0x30, 0xc6, 0x3f, 0xd3,
	0xd6, 0xc7, 0xad, 0xd7, 0x0e, 0xff, 0x0c, 0xbc, 0xab, 0x24, 0xd9, 0xec, 0xd2, 0x85, 0xfc, 0x6d,
	0x27, 0xf3, 0x82, 0x9d, 0x82, 0x13, 0x8b, 0x6d, 0x79, 0x3c, 0x60, 0x23, 0xe8, 0xa6, 0x22, 0x93,
	0x71, 0x31, 0x6d, 0x13, 0xfc, 0x9f, 0x16, 0x38, 0xf3, 0xa2, 0xc8, 0x1a, 0x34, 0xca, 0x14, 0x45,
	0x88, 0x61, 0x0a, 0xd6, 0x51, 0xe6, 0x96, 0xcc, 0x8e, 0x31, 0x6f, 0xc9, 0x74, 0xc8, 0x44, 0xd2,
	0xdb, 0x8c, 0x6c, 0x97, 0x6c, 0x4c, 0xb9, 0x55, 0x54, 0x5d, 0xb4, 0x3c, 0x05, 0xbe, 0x17, 0x51,
	0xb8, 0x9a, 0xf6, 0xd0, 0x74, 0xd5, 0x61, 0x1e, 0xfe, 0x29, 0xa7, 0x7d, 0xca, 0x33, 0x84, 0xce,
	0x0e, 0x8f, 0x06, 0x84, 0x44, 0xe3, 0x0e, 0x0d, 0x50, 0x06, 0xff, 0xb7, 0x05, 0xa3, 0x40, 0x16,
	0xaa, 0x38, 0xd3, 0xca, 0x18, 0x7a, 0xb9, 0x2c, 0xae, 0x4d, 0x95, 0x7d, 0x36, 0x81, 0xbe, 0x72,
	0xd8, 0x42, 0xfb, 0x1a, 0x12, 0xa8, 0x04, 0x1d, 0x72, 0x60, 0x6d, 0xe8, 0xf8, 0x11, 0x69, 0x9d,
	0x8a, 0x7d, 0x89, 0xb6, 0x4b, 0xb6, 0xed, 0xbb, 0x6b, 0xfa, 0x2e, 0x1b, 0xed, 0xd5, 0x3a, 0xe9,
	0x53, 0x7d, 0xa6, 0xf4, 0x41, 0xb5, 0x74, 0xa8, 0x96, 0x3e, 0xa4, 0xd2, 0xbf, 0x84, 0xe1, 0x42,
	0x8a, 0x95, 0x29, 0xbb, 0x31, 0x5a, 0xac, 0x20, 0x59, 0xaf, 0xb1, 0x08, 0x3d, 0x5b, 0xc3, 0x4a,
	0xa3, 0xe5, 0x5f, 0xc1, 0xe0, 0x22, 0x8c, 0xe4, 0xbb, 0x5f, 0x77, 0xf1, 0xe6, 0x58, 0x24, 0x36,
	0x9b, 0x8a, 0x87, 0x28, 0x11, 0x2b, 0x0a, 0x3e, 0xe5, 0x1f, 0x81, 0xf7, 0x53, 0x16, 0x16, 0x72,
	0x21, 0xf3, 0x34, 0x89, 0x73, 0x49, 0xdd, 0x16, 0xa2, 0xd8, 0xe5, 0xc4, 0xe0, 0xf2, 0x39, 0x74,
	0xbf, 0x0b, 0xb3, 0xef, 0xe3, 0x23, 0x6b, 0xc1, 0x5e, 0x82, 0x23, 0x70, 0xf0, 0x44, 0x3b, 0x3c,
	0x1f, 0x96, 0x9b, 0x37, 0x53, 0x77, 0xc1, 0x03, 0x80, 0x92, 0x22, 0x0b, 0x65, 0xce, 0x5e, 0x55,
	0x2d, 0x24, 0xeb, 0x20, 0xdc, 0xd3, 0x70, 0x9d, 0x89, 0xc3, 0x50, 0x75, 0x64, 0x30, 0xed, 0x47,
	0x30, 0xfc, 0x1b, 0xbc, 0xeb, 0x87, 0x6d, 0x14, 0xc6, 0x9b, 0x67, 0xad, 0xad, 0xb2, 0x0b, 0x91,
	0xdd, 0xe1, 0x24, 0x54, 0x85, 0x03, 0xce, 0x61, 0xa2, 0x26, 0x5e, 0x12, 0xec, 0x7b, 0xd7, 0x18,
	0xe2, 0xe0, 0x37, 0x30, 0xbe, 0x94, 0xc5, 0x1f, 0xa2, 0xb2, 0x50, 0x8d, 0xf9, 0x9a, 0x9c, 0x6d,
	0xca, 0x59, 0xbd, 0x17, 0x4f, 0xad, 0x5a, 0x9a, 0xe4, 0x61, 0x11, 0x26, 0x31, 0x6d, 0x92, 0xc7,
	0x5f, 0xc1, 0x64, 0xcf, 0xa7, 0x73, 0x22, 0x21, 0x39, 0x88, 0xf0, 0x94, 0xff, 0x0c, 0xe3, 0xe0,
	0xff, 0xa4, 0xb4, 0xe1, 0x74, 0x9d, 0x87, 0x39, 0x15, 0x60, 0x1d, 0x89, 0xbb, 0x9c, 0x96, 0xd7,
	0xe3, 0x0c, 0x26, 0x41, 0xa3, 0x04, 0xbc, 0xe2, 0xc9, 0x55, 0x98, 0x1f, 0x4b, 0x4a, 0x9d, 0xb5,
	0x0f, 0x3a, 0xa3, 0x5e, 0x71, 0x9a, 0x2f, 0x2a, 0x14, 0x8f, 0xb7, 0xf6, 0x16, 0xd8, 0x42, 0x6e,
	0x93, 0x7b, 0xf9, 0xec, 0xee, 0x50, 0xb1, 0xde, 0xab, 0x85, 0xe8, 0x82, 0x7f, 0x00, 0x6f, 0x21,
	0x15, 0xcc, 0x90, 0xec, 0x2f, 0xdb, 0xae, 0x7d, 0x2c, 0x7f, 0xc7, 0x4d, 0xd1, 0x97, 0x8f, 0x6b,
	0x9f, 0x44, 0xab, 0x1b, 0xa1, 0xe5, 0x68, 0xa0, 0x1c, 0x08, 0x20, 0x87, 0x43, 0x99, 0x26, 0x30,
	0x32, 0x94, 0x3a, 0xc9, 0x18, 0xbc, 0x00, 0x1f, 0xc2, 0x3a, 0xd7, 0x49, 0xf8, 0xdf, 0x4a, 0x5e,
	0xb4, 0x67, 0xbf, 0x30, 0xcb, 0x28, 0xb9, 0xdd, 0xe4, 0x7b, 0x0d, 0x5c, 0xae, 0x33, 0x29, 0xf7,
	0x3b, 0xb7, 0x14, 0xf7, 0x22, 0x8c, 0x28, 0x2b, 0x1d, 0xaf, 0x71, 0xaf, 0x73, 0xca, 0x59, 0x9a,
	0x84, 0x76, 0x6d, 0x30, 0x0d, 0xb9, 0x14, 0x41, 0x55, 0x22, 0xd6, 0x13, 0xc9, 0x98, 0x94, 0xc5,
	0x53, 0x6c, 0xeb, 0xcc, 0x0a, 0xa1, 0x77, 0xfe, 0x57, 0x0f, 0x3a, 0xf3, 0x34, 0x64, 0x6f, 0xa0,
	0xa7, 0x55, 0x8f, 0x9d, 0xe9, 0x37, 0x52, 0x57, 0x41, 0xbf, 0xf6, 0x1a, 0x4f, 0xd8, 0x27, 0xd0,
	0xbb, 0xd4, 0x01, 0xe6, 0x44, 0x7d, 0x17, 0x9a, 0xb0, 0x19, 0x38, 0xea, 0x85, 0x30, 0xa6, 0xdd,
	0x15, 0x81, 0xf2, 0x27, 0xda, 0x67, 0x85, 0x07, 0xf1, 0x6f, 0xc1, 0x25, 0x29, 0x61, 0x07, 0x87,
	0xfe, 0xfb, 0xda, 0x53, 0x93, 0x1a, 0x0c, 0xf9, 0x14, 0xdc, 0xeb, 0x0d, 0x5e, 0x13, 0xab, 0x3f,
	0x6e, 0xbf, 0xf1, 0xd6, 0x4f, 0xd8, 0x6b, 0xe8, 0xbe, 0xcb, 0xa4, 0x40, 0xf2, 0x63, 0xc8, 0x37,
	0xd0, 0x2d, 0x57, 0xa6, 0x89, 0x7c, 0xaa, 0x06, 0x0c, 0x28, 0x3f, 0x7f, 0xcc, 0x20, 0x6a, 0x5f,
	0xc3, 0xc3, 0x0c, 0x33, 0x00, 0x35, 0x0a, 0xb4, 0xe7, 0x51, 0x54, 0x9f, 0xe0, 0x8b, 0x1a, 0x56,
	0x89, 0x17, 0xcd, 0xa5, 0xa7, 0x95, 0x6a, 0x7f, 0x3f, 0x35, 0xe5, 0x3a, 0x4c, 0x71, 0x0e, 0x7d,
	0x23, 0x4e, 0xf5, 0x04, 0x1f, 0x56, 0xee, 0xa2, 0x2a, 0x5d, 0x18, 0xf3, 0x35, 0xf4, 0x8d, 0xb8,
	0xb0, 0x0f, 0x34, 0xac, 0xa1, 0x5e, 0x36, 0xbc, 0xa9, 0x42, 0x65, 0x78, 0xd0, 0x0c, 0x0f, 0x9e,
	0x08, 0x0f, 0x0e, 0xc3, 0xbf, 0x85, 0x81, 0x15, 0x00, 0x66, 0x70, 0x4d, 0x55, 0xf1, 0xa7, 0x87,
	0x07, 0x96, 0xe1, 0x42, 0x7d, 0x02, 0xed, 0x5b, 0x67, 0x2f, 0x6d, 0xa7, 0x4d, 0xc9, 0xf0, 0xfd,
	0xc7, 0x8e, 0x2c, 0xcf, 0x17, 0x6a, 0x01, 0xd4, 0xcb, 0xb1, 0xf7, 0x59, 0xd3, 0x0a, 0xff, 0xac,
	0xe1, 0xad, 0x06, 0x96, 0xcf, 0xdb, 0x06, 0xd6, 0xde, 0xbf, 0x0d, 0xac, 0x6b, 0x00, 0x3f, 0x59,
	0x76, 0xc9, 0xff, 0xf9, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9c, 0xa6, 0x05, 0xd8, 0x77, 0x09,
	0x00, 0x00,
}
