// Code generated by protoc-gen-go.
// source: fs_api.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ModFS ...
type ModFS struct {
	Name   string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=Status" json:"Status,omitempty"`
}

func (m *ModFS) Reset()                    { *m = ModFS{} }
func (m *ModFS) String() string            { return proto1.CompactTextString(m) }
func (*ModFS) ProtoMessage()               {}
func (*ModFS) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// Request to create a new filesystem
type CreateFSRequest struct {
	Token  string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	FSName string `protobuf:"bytes,2,opt,name=FSName" json:"FSName,omitempty"`
}

func (m *CreateFSRequest) Reset()                    { *m = CreateFSRequest{} }
func (m *CreateFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateFSRequest) ProtoMessage()               {}
func (*CreateFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// Response from creating a new filesystem
type CreateFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
}

func (m *CreateFSResponse) Reset()                    { *m = CreateFSResponse{} }
func (m *CreateFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*CreateFSResponse) ProtoMessage()               {}
func (*CreateFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// Request a list of all file systems for a given account
type ListFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
}

func (m *ListFSRequest) Reset()                    { *m = ListFSRequest{} }
func (m *ListFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListFSRequest) ProtoMessage()               {}
func (*ListFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

// Response for displaying a list of all an accounts file systems.
type ListFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
}

func (m *ListFSResponse) Reset()                    { *m = ListFSResponse{} }
func (m *ListFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListFSResponse) ProtoMessage()               {}
func (*ListFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

// Request to show the specific details about a file system
type ShowFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	FSid  string `protobuf:"bytes,2,opt,name=FSid" json:"FSid,omitempty"`
}

func (m *ShowFSRequest) Reset()                    { *m = ShowFSRequest{} }
func (m *ShowFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*ShowFSRequest) ProtoMessage()               {}
func (*ShowFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

// Response for a specific file system for an account.
type ShowFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
}

func (m *ShowFSResponse) Reset()                    { *m = ShowFSResponse{} }
func (m *ShowFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*ShowFSResponse) ProtoMessage()               {}
func (*ShowFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

// Request to delete a specific file system
type DeleteFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	FSid  string `protobuf:"bytes,2,opt,name=FSid" json:"FSid,omitempty"`
}

func (m *DeleteFSRequest) Reset()                    { *m = DeleteFSRequest{} }
func (m *DeleteFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteFSRequest) ProtoMessage()               {}
func (*DeleteFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

// Response from deleting a file system
type DeleteFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
}

func (m *DeleteFSResponse) Reset()                    { *m = DeleteFSResponse{} }
func (m *DeleteFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteFSResponse) ProtoMessage()               {}
func (*DeleteFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

// Request to update a specific file system's information
type UpdateFSRequest struct {
	Token   string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	FSid    string `protobuf:"bytes,2,opt,name=FSid" json:"FSid,omitempty"`
	Filesys *ModFS `protobuf:"bytes,4,opt,name=Filesys" json:"Filesys,omitempty"`
}

func (m *UpdateFSRequest) Reset()                    { *m = UpdateFSRequest{} }
func (m *UpdateFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateFSRequest) ProtoMessage()               {}
func (*UpdateFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *UpdateFSRequest) GetFilesys() *ModFS {
	if m != nil {
		return m.Filesys
	}
	return nil
}

// Response from an update operation
type UpdateFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
}

func (m *UpdateFSResponse) Reset()                    { *m = UpdateFSResponse{} }
func (m *UpdateFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*UpdateFSResponse) ProtoMessage()               {}
func (*UpdateFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

// Request grant an ip address access to a file system
type GrantAddrFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	FSid  string `protobuf:"bytes,2,opt,name=FSid" json:"FSid,omitempty"`
	Addr  string `protobuf:"bytes,3,opt,name=Addr" json:"Addr,omitempty"`
}

func (m *GrantAddrFSRequest) Reset()                    { *m = GrantAddrFSRequest{} }
func (m *GrantAddrFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*GrantAddrFSRequest) ProtoMessage()               {}
func (*GrantAddrFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

// Response from granting ip address access to a file system
type GrantAddrFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
}

func (m *GrantAddrFSResponse) Reset()                    { *m = GrantAddrFSResponse{} }
func (m *GrantAddrFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*GrantAddrFSResponse) ProtoMessage()               {}
func (*GrantAddrFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

// Request revoke an ip address access to a file system
type RevokeAddrFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	FSid  string `protobuf:"bytes,2,opt,name=FSid" json:"FSid,omitempty"`
	Addr  string `protobuf:"bytes,3,opt,name=Addr" json:"Addr,omitempty"`
}

func (m *RevokeAddrFSRequest) Reset()                    { *m = RevokeAddrFSRequest{} }
func (m *RevokeAddrFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*RevokeAddrFSRequest) ProtoMessage()               {}
func (*RevokeAddrFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

// Response from revoking ip address access to a file system
type RevokeAddrFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
}

func (m *RevokeAddrFSResponse) Reset()                    { *m = RevokeAddrFSResponse{} }
func (m *RevokeAddrFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*RevokeAddrFSResponse) ProtoMessage()               {}
func (*RevokeAddrFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func init() {
	proto1.RegisterType((*ModFS)(nil), "proto.ModFS")
	proto1.RegisterType((*CreateFSRequest)(nil), "proto.CreateFSRequest")
	proto1.RegisterType((*CreateFSResponse)(nil), "proto.CreateFSResponse")
	proto1.RegisterType((*ListFSRequest)(nil), "proto.ListFSRequest")
	proto1.RegisterType((*ListFSResponse)(nil), "proto.ListFSResponse")
	proto1.RegisterType((*ShowFSRequest)(nil), "proto.ShowFSRequest")
	proto1.RegisterType((*ShowFSResponse)(nil), "proto.ShowFSResponse")
	proto1.RegisterType((*DeleteFSRequest)(nil), "proto.DeleteFSRequest")
	proto1.RegisterType((*DeleteFSResponse)(nil), "proto.DeleteFSResponse")
	proto1.RegisterType((*UpdateFSRequest)(nil), "proto.UpdateFSRequest")
	proto1.RegisterType((*UpdateFSResponse)(nil), "proto.UpdateFSResponse")
	proto1.RegisterType((*GrantAddrFSRequest)(nil), "proto.GrantAddrFSRequest")
	proto1.RegisterType((*GrantAddrFSResponse)(nil), "proto.GrantAddrFSResponse")
	proto1.RegisterType((*RevokeAddrFSRequest)(nil), "proto.RevokeAddrFSRequest")
	proto1.RegisterType((*RevokeAddrFSResponse)(nil), "proto.RevokeAddrFSResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for FileSystemAPI service

type FileSystemAPIClient interface {
	CreateFS(ctx context.Context, in *CreateFSRequest, opts ...grpc.CallOption) (*CreateFSResponse, error)
	ListFS(ctx context.Context, in *ListFSRequest, opts ...grpc.CallOption) (*ListFSResponse, error)
	ShowFS(ctx context.Context, in *ShowFSRequest, opts ...grpc.CallOption) (*ShowFSResponse, error)
	DeleteFS(ctx context.Context, in *DeleteFSRequest, opts ...grpc.CallOption) (*DeleteFSResponse, error)
	UpdateFS(ctx context.Context, in *UpdateFSRequest, opts ...grpc.CallOption) (*UpdateFSResponse, error)
	GrantAddrFS(ctx context.Context, in *GrantAddrFSRequest, opts ...grpc.CallOption) (*GrantAddrFSResponse, error)
	RevokeAddrFS(ctx context.Context, in *RevokeAddrFSRequest, opts ...grpc.CallOption) (*RevokeAddrFSResponse, error)
}

type fileSystemAPIClient struct {
	cc *grpc.ClientConn
}

func NewFileSystemAPIClient(cc *grpc.ClientConn) FileSystemAPIClient {
	return &fileSystemAPIClient{cc}
}

func (c *fileSystemAPIClient) CreateFS(ctx context.Context, in *CreateFSRequest, opts ...grpc.CallOption) (*CreateFSResponse, error) {
	out := new(CreateFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/CreateFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) ListFS(ctx context.Context, in *ListFSRequest, opts ...grpc.CallOption) (*ListFSResponse, error) {
	out := new(ListFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/ListFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) ShowFS(ctx context.Context, in *ShowFSRequest, opts ...grpc.CallOption) (*ShowFSResponse, error) {
	out := new(ShowFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/ShowFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) DeleteFS(ctx context.Context, in *DeleteFSRequest, opts ...grpc.CallOption) (*DeleteFSResponse, error) {
	out := new(DeleteFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/DeleteFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) UpdateFS(ctx context.Context, in *UpdateFSRequest, opts ...grpc.CallOption) (*UpdateFSResponse, error) {
	out := new(UpdateFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/UpdateFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) GrantAddrFS(ctx context.Context, in *GrantAddrFSRequest, opts ...grpc.CallOption) (*GrantAddrFSResponse, error) {
	out := new(GrantAddrFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/GrantAddrFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) RevokeAddrFS(ctx context.Context, in *RevokeAddrFSRequest, opts ...grpc.CallOption) (*RevokeAddrFSResponse, error) {
	out := new(RevokeAddrFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/RevokeAddrFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FileSystemAPI service

type FileSystemAPIServer interface {
	CreateFS(context.Context, *CreateFSRequest) (*CreateFSResponse, error)
	ListFS(context.Context, *ListFSRequest) (*ListFSResponse, error)
	ShowFS(context.Context, *ShowFSRequest) (*ShowFSResponse, error)
	DeleteFS(context.Context, *DeleteFSRequest) (*DeleteFSResponse, error)
	UpdateFS(context.Context, *UpdateFSRequest) (*UpdateFSResponse, error)
	GrantAddrFS(context.Context, *GrantAddrFSRequest) (*GrantAddrFSResponse, error)
	RevokeAddrFS(context.Context, *RevokeAddrFSRequest) (*RevokeAddrFSResponse, error)
}

func RegisterFileSystemAPIServer(s *grpc.Server, srv FileSystemAPIServer) {
	s.RegisterService(&_FileSystemAPI_serviceDesc, srv)
}

func _FileSystemAPI_CreateFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).CreateFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/CreateFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).CreateFS(ctx, req.(*CreateFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_ListFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).ListFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/ListFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).ListFS(ctx, req.(*ListFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_ShowFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).ShowFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/ShowFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).ShowFS(ctx, req.(*ShowFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_DeleteFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).DeleteFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/DeleteFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).DeleteFS(ctx, req.(*DeleteFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_UpdateFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).UpdateFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/UpdateFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).UpdateFS(ctx, req.(*UpdateFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_GrantAddrFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantAddrFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).GrantAddrFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/GrantAddrFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).GrantAddrFS(ctx, req.(*GrantAddrFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_RevokeAddrFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeAddrFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).RevokeAddrFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/RevokeAddrFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).RevokeAddrFS(ctx, req.(*RevokeAddrFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileSystemAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FileSystemAPI",
	HandlerType: (*FileSystemAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFS",
			Handler:    _FileSystemAPI_CreateFS_Handler,
		},
		{
			MethodName: "ListFS",
			Handler:    _FileSystemAPI_ListFS_Handler,
		},
		{
			MethodName: "ShowFS",
			Handler:    _FileSystemAPI_ShowFS_Handler,
		},
		{
			MethodName: "DeleteFS",
			Handler:    _FileSystemAPI_DeleteFS_Handler,
		},
		{
			MethodName: "UpdateFS",
			Handler:    _FileSystemAPI_UpdateFS_Handler,
		},
		{
			MethodName: "GrantAddrFS",
			Handler:    _FileSystemAPI_GrantAddrFS_Handler,
		},
		{
			MethodName: "RevokeAddrFS",
			Handler:    _FileSystemAPI_RevokeAddrFS_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor1 = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x92, 0x5d, 0x4b, 0xfb, 0x30,
	0x14, 0xc6, 0xff, 0xfb, 0xef, 0x45, 0x3d, 0x6b, 0x37, 0xc9, 0xa6, 0xd6, 0x8a, 0x32, 0xaa, 0x82,
	0x17, 0x32, 0x64, 0x5e, 0x78, 0x25, 0x3a, 0x1c, 0x95, 0x81, 0x13, 0x59, 0xf5, 0x5a, 0x22, 0x8d,
	0x58, 0xdc, 0xd6, 0xda, 0x64, 0xca, 0x3e, 0xa6, 0xdf, 0xc8, 0xf4, 0x2d, 0x5d, 0xbb, 0x4c, 0x86,
	0x57, 0xa5, 0x39, 0xe7, 0xf9, 0x3d, 0x27, 0x39, 0x0f, 0x28, 0xaf, 0xf4, 0x19, 0x7b, 0x4e, 0xdb,
	0xf3, 0x5d, 0xe6, 0xa2, 0x72, 0xf8, 0x31, 0x8e, 0xa1, 0x3c, 0x70, 0x6d, 0xd3, 0x42, 0x0a, 0x94,
	0xee, 0xf1, 0x98, 0x68, 0x85, 0x56, 0xe1, 0x64, 0x03, 0xd5, 0xa0, 0x62, 0x31, 0xcc, 0xa6, 0x54,
	0xfb, 0x1f, 0xfc, 0x1b, 0x67, 0x50, 0xbf, 0xf1, 0x09, 0x66, 0xc4, 0xb4, 0x86, 0xe4, 0x63, 0x4a,
	0x28, 0x43, 0x2a, 0x94, 0x1f, 0xdd, 0x77, 0x32, 0x49, 0x15, 0xa6, 0x15, 0x12, 0x22, 0x45, 0x0b,
	0x36, 0x53, 0x05, 0xf5, 0xdc, 0x09, 0x25, 0x81, 0x47, 0x0f, 0x33, 0x1c, 0x29, 0x8c, 0x03, 0x50,
	0xef, 0x1c, 0xca, 0x96, 0x11, 0x79, 0xbd, 0x96, 0xd4, 0xa5, 0xfa, 0x53, 0x50, 0xad, 0x37, 0xf7,
	0x6b, 0xe9, 0x44, 0xbc, 0xdb, 0xb4, 0x1c, 0x3b, 0x9e, 0x87, 0xd3, 0x92, 0x6e, 0x29, 0xad, 0x0d,
	0xf5, 0x1e, 0x19, 0x91, 0x5f, 0x6e, 0x98, 0xe5, 0xf1, 0xfb, 0xa5, 0xfd, 0x52, 0xe2, 0x00, 0xea,
	0x4f, 0x9e, 0x8d, 0x57, 0x25, 0xa2, 0x7d, 0x58, 0x33, 0x9d, 0x11, 0xa1, 0x33, 0xaa, 0x95, 0xf8,
	0x41, 0xb5, 0xa3, 0x44, 0xab, 0x6a, 0x87, 0x0b, 0x0a, 0x0c, 0x53, 0x9c, 0xd4, 0xf0, 0x0a, 0xd0,
	0xad, 0x8f, 0x27, 0xac, 0x6b, 0xdb, 0xfe, 0x8a, 0x9e, 0xfc, 0x2f, 0xe8, 0xd6, 0x8a, 0x21, 0xe0,
	0x10, 0x1a, 0x19, 0x80, 0xd4, 0xe5, 0x1a, 0x1a, 0x43, 0xf2, 0xc9, 0x89, 0x7f, 0xb6, 0x39, 0x82,
	0x66, 0x96, 0x20, 0xf3, 0xe9, 0x7c, 0x17, 0x41, 0x0d, 0xde, 0xc3, 0x9a, 0x51, 0x46, 0xc6, 0xdd,
	0x87, 0x3e, 0xba, 0x84, 0xf5, 0x24, 0x52, 0x68, 0x3b, 0x7e, 0x9b, 0x5c, 0x2a, 0xf5, 0x9d, 0x85,
	0xf3, 0x08, 0x6e, 0xfc, 0x43, 0x17, 0x50, 0x89, 0xf2, 0x84, 0x9a, 0x71, 0x53, 0x26, 0x7e, 0xfa,
	0x56, 0xee, 0x74, 0x5e, 0x18, 0x45, 0x47, 0x08, 0x33, 0xb9, 0x13, 0xc2, 0x6c, 0xbe, 0xb8, 0x90,
	0x0f, 0x9c, 0x64, 0x44, 0x0c, 0x9c, 0x0b, 0x99, 0x18, 0x38, 0x1f, 0xa6, 0x48, 0x9e, 0x6c, 0x5c,
	0xc8, 0x73, 0x89, 0x12, 0xf2, 0x7c, 0x34, 0xb8, 0xdc, 0x84, 0xea, 0xdc, 0x36, 0xd1, 0x6e, 0xdc,
	0xb9, 0x18, 0x11, 0x5d, 0x97, 0x95, 0x04, 0xa7, 0x0f, 0xca, 0xfc, 0xba, 0x50, 0xd2, 0x2d, 0x49,
	0x81, 0xbe, 0x27, 0xad, 0x25, 0xa8, 0x97, 0x4a, 0x58, 0x3d, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff,
	0x2c, 0x41, 0xc2, 0x40, 0x8b, 0x04, 0x00, 0x00,
}
